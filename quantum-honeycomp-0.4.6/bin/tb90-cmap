#!/usr/bin/python


import pylab as py
import sys
import numpy as np

fig = py.figure()
fig.set_facecolor("white")

name = sys.argv[1]  # name of the file

m = py.genfromtxt(name).transpose()
x = m[0]
y = m[1]
z = m[2]

# get dimensions assuming uniform grid

  
nx = np.sqrt(len(x))
if nx*nx==np.int(len(x)):
  ny = nx
else:
  try:
    nx = int(round((x.max()-x.min())/abs(x[1]-x[0]))) + 1
    nx = int(nx) 
    ny = len(z)/nx
    
    print nx,ny
  except:
    ny = (y.max()-y.min())/abs(y[1]-y[0])
    ny = int(round(ny)) + 1
    nx = len(z)/ny




print "Detected",nx,ny,"grid"

Z = np.abs(z).reshape(nx,ny) # makes a (Zy,Zx) matrix out of z
T = Z.T              # transposes the matrix (Zx,Zy)

py.imshow(-T, aspect='auto', origin='lower',cmap = py.get_cmap("spectral"), extent = ( x.min(), x.max(), y.min(), y.max()))
py.xticks([])
py.yticks([])


py.show()
