#!/usr/bin/python

import subprocess
import sys

def get_qhroot():
  """Gets the root path of quantum honeycomp"""
  # get the path
  m = subprocess.Popen(["which","quantum-honeycomp"],stdout=subprocess.PIPE)
  m = m.communicate()
  p = m[0] # get the element of the tuple
  fs = p.split()[0].split("/") # list with folder steps
  p = ""
  for i in range(len(fs)-2):  # create path to the main folder
    f = fs[i] # folder name
    p += f+"/" # add to path
  return p # return the path

path = get_qhroot()  # get the root path
print("QH Path is",path)


from gi.repository import Gtk as gtk
builder = gtk.Builder()


# get the signls from python script
sys.path.append(path+"systems")

# import the library for the different modes
import qhmodes
modes_dict = {}
for m in qhmodes.modes: # loop over modes
  modes_dict[m] = qhmodes.call_mode(path,m)  # create a function for each mode
modes_dict["on_window_destroy"] = gtk.main_quit  # close the main window

##### Main App #####
class qhApp(object):
        def __init__(self):
            builder.add_from_file(path+"/systems/qhApp.xml")
            builder.connect_signals(modes_dict)  # add the different modes
            self.window = builder.get_object("qh_window")
            self.window.show()



app = qhApp()  # launch the app
gtk.main()  # infinite loop


