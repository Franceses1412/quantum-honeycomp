#!/usr/bin/python
from __future__ import print_function
import os
import platform

def get_qhroot():
  """Gets the root path of quantum honeycomp"""
  return os.path.dirname(os.path.realpath(__file__))+"/../" 
#  return os.environ["QHROOT"]+"/"

qhroot = get_qhroot()  # get the root path
os.environ["QHROOT"] = qhroot # create the environmental variable


def get_anaconda_command(name="python"):
  """Return the path for Anaconda Python, which has pyqt by default"""
  os.system("rm -f /tmp/qh_commands.txt") # remove
  os.system("which -a "+name+"  > /tmp/qh_commands.txt") # run the command
  lines = open("/tmp/qh_commands.txt").read() # read the lines
  lines = lines.split("\n") # split the lines
  del lines[-1] # remove the last one
  print("Found ",len(lines),"python paths\n")
  for l in lines: # loop over pythons
    l = l.split(" ")[-1] # get last line 
    print(l)
    if "anaconda" in l: 
      print("Python interpreter ",l)
      return l
  print("Anaconda",name,"not found")
  raise # not found





try:
  python = get_anaconda_command("python3") # Anaconda command
except:
  python = "python" # hope for the best


if not platform.system()=="Linux": # For Mac
  try:
    python = get_anaconda_command("python")
  except: python="python"
  os.system(python+" "+qhroot+"bin/quantum-honeycomp-pyqt")

else: # For Linux
  os.system(python+" "+qhroot+"bin/quantum-honeycomp-pyqt")
#  try:
#    from gi.repository import Gtk as gtk
#    print("Running GTK interface")
#    os.system(python+" "+qhroot+"bin/quantum-honeycomp-gtk")
#  except:
#    os.system(python+" "+qhroot+"bin/quantum-honeycomp-gtk")
##    os.system(python+" "+qhroot+"bin/quantum-honeycomp-pyqt")
#  #  os.system("quantum-honeycomp-pyqt")
#    print("Running PyQt interface")
#  #  exit()
